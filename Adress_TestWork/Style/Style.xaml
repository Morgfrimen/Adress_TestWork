<ResourceDictionary x:Class="Adress_TestWork.Style.Style"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- ReSharper disable once InconsistentNaming -->
    <Style TargetType="Button"
           x:Key="UC_AddAndDelete_Button">
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="Margin"
                Value="10,5" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="MinWidth"
                Value="70" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border BorderThickness="1.5"
                            BorderBrush="Black">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsFocused" Value="False">
                                        <Setter Property="Background"
                                                Value="Transparent" />
                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="Background"
                                                Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Viewbox>
                            <TextBlock Text="{TemplateBinding Content}"
                                       TextAlignment="Center"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Padding="5,10"
                                       TextWrapping="Wrap" />
                        </Viewbox>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock"
           x:Key="CellTemplate">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="TextAlignment"
                Value="Center" />
        <Setter Property="IsEnabled"
                Value="True" />
    </Style>

    <!-- ReSharper disable once InconsistentNaming -->
    <Style TargetType="TextBox" x:Key="StyleTextBox">
        <EventSetter Event="Loaded" Handler="EventSetter_OnHandler" />
        <EventSetter Event="Validation.Error" Handler="Validation_OnError" />
    </Style>
    <!-- ReSharper disable once InconsistentNaming -->
    <Style TargetType="DataGridCell"
           x:Key="MW_DataGrid_Cell">
        <Setter Property="Margin"
                Value="0,0.5,0,0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="BorderThickness"
                Value="0.5" />
        <Style.Triggers>
            <Trigger Property="IsEditing"
                     Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridCell">
                            <TextBox BorderThickness="0"
                                     Style="{StaticResource StyleTextBox}"
                                     HorizontalContentAlignment="Center">
                                <TextBox.Text>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="Content.Text"
                                             Mode="TwoWay"
                                             NotifyOnValidationError="True">
                                        <Binding.ValidationRules>
                                            <DataErrorValidationRule ValidationStep="UpdatedValue"
                                                                     ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush"
                        Value="Red" />
                <Setter Property="Margin"
                        Value="0,2" />
                <Setter Property="BorderThickness"
                        Value="5" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="False">
                <Setter Property="BorderBrush"
                        Value="Black" />
                <Setter Property="Margin"
                        Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox"
           x:Key="CellFocus">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="TextAlignment"
                Value="Center" />
        <Setter Property="IsEnabled"
                Value="True" />
    </Style>


    <Style TargetType="DataGridColumnHeader"
           x:Key="Header">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{TemplateBinding Content }"
                               TextAlignment="Center"
                               TextWrapping="Wrap" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>